import { Position as HtmlPosition, TextDocument, Range as HtmlRange, TextEdit } from "vscode-html-languageservice";
import type { editor, Position, IRange, languages, Uri } from "../monaco";
import type ts from "typescript";
export declare function getHtmlService(): import("vscode-html-languageservice").LanguageService;
export declare function toLsPosition(position: Position): HtmlPosition;
export declare function toLsRange(range: IRange): HtmlRange;
export declare function toRange(range: HtmlRange): IRange;
export declare function toTextEdit(textEdit: TextEdit): languages.TextEdit;
export declare function modelToDocument(model: editor.IModel): TextDocument;
export declare function getEmbeddedJavascriptUri(value: editor.IModel | Uri): Uri;
export declare function textSpanToRange(model: editor.ITextModel, span: ts.TextSpan): IRange;
export declare function tagToString(tag: ts.JSDocTagInfo): string;
export declare class Kind {
    static unknown: string;
    static keyword: string;
    static script: string;
    static module: string;
    static class: string;
    static interface: string;
    static type: string;
    static enum: string;
    static variable: string;
    static localVariable: string;
    static function: string;
    static localFunction: string;
    static memberFunction: string;
    static memberGetAccessor: string;
    static memberSetAccessor: string;
    static memberVariable: string;
    static constructorImplementation: string;
    static callSignature: string;
    static indexSignature: string;
    static constructSignature: string;
    static parameter: string;
    static typeParameter: string;
    static primitiveType: string;
    static label: string;
    static alias: string;
    static const: string;
    static let: string;
    static warning: string;
}
